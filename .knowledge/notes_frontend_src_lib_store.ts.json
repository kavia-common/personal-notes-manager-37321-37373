{"is_source_file": true, "format": "TypeScript", "description": "This file defines the store and context management logic for a notes application built with Qwik. It includes type definitions for the store state and actions, fetch helpers, provider hooks to load notes, and functions for CRUD operations on notes, with optimistic UI updates and fallback demo data.", "external_files": ["./types"], "external_methods": ["createNote", "nowIso"], "published": ["NotesState", "NotesActions", "NotesContext", "useNotesProvider", "useNotes", "getNotesActions"], "classes": [], "methods": [{"name": "useNotesProvider", "description": "Provides the notes store context and initializes loading of notes, exposing the store's state and actions."}, {"name": "export function useNotes(): NotesContextValue { useNotes", "description": "Hook to access the notes context (state and actions) within components.", "scope": "", "scopeKind": ""}, {"name": "export function getNotesActions(): NotesActions { getNotesActions", "description": "Returns the stored actions object for notes, to be used outside of hooks or in non-reactive contexts.", "scope": "", "scopeKind": ""}, {"name": "async function apiDelete(path: string): Promise<void> { apiDelete", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "async function apiGet<T>(path: string): Promise<T> { apiGet", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "async function apiPost<T>(path: string, body: unknown): Promise<T> { apiPost", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "async function apiPut<T>(path: string, body: unknown): Promise<T> { apiPut", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["createContextId(\"notes.context\")", "useContextProvider", "useStore", "useVisibleTask$", "fetch", "setTimeout"], "search-terms": ["Qwik store", "Notes context", "CRUD notes", "TypeScript store", "Notes actions", "Notes state"], "state": 2, "file_id": 27, "knowledge_revision": 128, "git_revision": "", "revision_history": [{"86": ""}, {"92": ""}, {"93": ""}, {"98": ""}, {"111": ""}, {"112": ""}, {"113": ""}, {"114": ""}, {"121": ""}, {"127": ""}, {"128": ""}], "ctags": [{"_type": "tag", "name": "NotesActions", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export type NotesActions = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NotesContext", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export const NotesContext = createContextId<NotesContextValue>(\"notes.context\");$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "NotesContextValue", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export type NotesContextValue = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NotesState", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export type NotesState = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "__notesActionsRef", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^let __notesActionsRef: NotesActions | null = null;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "apiBase", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^const apiBase = import.meta.env.VITE_API_BASE || import.meta.env.VITE_BACKEND_URL || \"\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "apiDelete", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^async function apiDelete(path: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiGet", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^async function apiGet<T>(path: string): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiPost", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^async function apiPost<T>(path: string, body: unknown): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiPut", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^async function apiPut<T>(path: string, body: unknown): Promise<T> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "backup", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const backup = { ...prev };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "backupList", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const backupList = state.notes.slice();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const updated: Note = { ...prev, title: input.title, content: input.content, updatedAt: no/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "err", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^        const err = new Error(\"Note not found\");$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "getNotesActions", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export function getNotesActions(): NotesActions {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^        const msg = (err as any)?.message || \"Failed to add note.\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^        const msg = (err as any)?.message || \"Failed to delete note.\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^        const msg = (err as any)?.message || \"Failed to update note.\";$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const prev = state.notes.find((n) => n.id === input.id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^  const res = await fetch(`${apiBase}${path}`, { headers: { \"Accept\": \"application\\/json\" } });$/", "language": "TypeScript", "kind": "constant", "scope": "apiGet", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^  const res = await fetch(`${apiBase}${path}`, { method: \"DELETE\" });$/", "language": "TypeScript", "kind": "constant", "scope": "apiDelete", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^  const res = await fetch(`${apiBase}${path}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "apiPost", "scopeKind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^  const res = await fetch(`${apiBase}${path}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "apiPut", "scopeKind": "function"}, {"_type": "tag", "name": "saved", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^        let saved: Note;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const updated: Note = { ...prev, title: input.title, content: input.content, updatedAt: no/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const updated: Note = { ...prev, title: input.title, content: input.content, updatedAt: no/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^      const updated: Note = { ...prev, title: input.title, content: input.content, updatedAt: no/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "useNotes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export function useNotes(): NotesContextValue {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useNotesProvider", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-37321-37373/notes_frontend/src/lib/store.ts", "pattern": "/^export const useNotesProvider = () => {$/", "language": "TypeScript", "kind": "constant"}], "hash": "5862616f3472986f8de2aabc1b87120e", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/lib/store.ts", "fields": [{"name": "let __notesActionsRef: NotesActions | null = null;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "let saved: Note;", "scope": "", "scopeKind": "", "description": "unavailable"}]}